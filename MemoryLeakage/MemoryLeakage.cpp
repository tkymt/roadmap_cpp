// MemoryLeakage.cpp : このファイルには 'main' 関数が含まれています。プログラム実行の開始と終了がそこで行われます。
//

// メモリリークが発生する関数
void create_memory_leak() {
	int* ptr = new int[100];

	// `delete[] ptr;`を書いていないとメモリリークが発生する
}

// メモリリークを回避するためにスマートポインタを使う関数
#include <memory>
void no_memory_leak() {
	std::shared_ptr<int[]>ptr = std::make_shared<int[]>(100); //shared_ptrを使用して整数の配列をヒープメモリに割り当てる
} // shared_ptrがスコープ外になり、割り当てられているメモリが自動的に解除される

int main(){}

// プログラムの実行: Ctrl + F5 または [デバッグ] > [デバッグなしで開始] メニュー
// プログラムのデバッグ: F5 または [デバッグ] > [デバッグの開始] メニュー

// 作業を開始するためのヒント: 
//    1. ソリューション エクスプローラー ウィンドウを使用してファイルを追加/管理します 
//   2. チーム エクスプローラー ウィンドウを使用してソース管理に接続します
//   3. 出力ウィンドウを使用して、ビルド出力とその他のメッセージを表示します
//   4. エラー一覧ウィンドウを使用してエラーを表示します
//   5. [プロジェクト] > [新しい項目の追加] と移動して新しいコード ファイルを作成するか、[プロジェクト] > [既存の項目の追加] と移動して既存のコード ファイルをプロジェクトに追加します
//   6. 後ほどこのプロジェクトを再び開く場合、[ファイル] > [開く] > [プロジェクト] と移動して .sln ファイルを選択します
